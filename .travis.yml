# Travis configuration for etl-schema.
#
# The steps it takes are:
#
#  * Run unit tests.
#  * install the Google Cloud SDK command line tools (gcloud)
#  * deploy the bigquery views when the branch/tag matches a supported
#    deployment target.
#
# NOTE: Cloud functions only support primitive IAM roles: Owner, Editor, Viewer.
# See: https://cloud.google.com/functions/docs/concepts/iam
# TODO(soltesz): Add deployment automation when fine-grained permissions are
# possible.
language: go

go:
- '1.11'
go_import_path: github.com/m-lab/etl-schema

before_install:
- go get github.com/mattn/goveralls
- echo Branch is ${TRAVIS_BRANCH} and Tag is $TRAVIS_TAG

script:
- set -e
- go test -v -short -covermode=count -coverprofile=merge.cov github.com/m-lab/etl-schema/cmd/bq_create_view
- goveralls -coverprofile=merge.cov -service=travis-ci

before_deploy:
- go get github.com/m-lab/etl-schema/cmd/bq_create_view

# Install gcloud, for integration tests.
- $TRAVIS_BUILD_DIR/travis/install_gcloud.sh
- source "${HOME}/google-cloud-sdk/path.bash.inc"


#################################################################################
# Deployment Section
#
#  Overview:
#   1.  Test in sandbox during development
#   2.  Deploy to staging on commit to master
#   3.  Deploy to prod when a branch is tagged with prod-*
#
#  We want to test individual components in sandbox, and avoid stepping on each
#  other, so we do NOT automate deployment to sandbox.  Each person should
#  use a branch name to trigger the single deployment that they are working on.
#
#  We want to soak all code in staging before deploying to prod.  To avoid
#  incompatible components, we deploy ALL elements to staging when we merge
#  to master branch.
#
#  Deployments to prod are done by deliberately tagging a specific commit,
#  typically in the master branch, with a tag starting with prod-*.
#  DO NOT just tag the latest version in master, as someone may have
#  pushed new code that hasn't had a chance to soak in staging.
#
#
# Deploy steps never trigger on a new Pull Request. Deploy steps will trigger
# on specific branch name patterns, after a merge to master, or on
# an explicit tag that matches "on:" conditions.
#################################################################################

deploy:
######################################################################
#  Sandbox deployments
#  - before code review for development code in a specific branch.
######################################################################

- provider: script
  script:
    # Update these version numbers when making changes to the views.
    $TRAVIS_BUILD_DIR/travis/activate_service_account.sh SERVICE_ACCOUNT_mlab_sandbox
    && cd $TRAVIS_BUILD_DIR/views
    && ./create_dataset_views.sh SERVICE_ACCOUNT_mlab_sandbox mlab-sandbox mlab-sandbox
  skip_cleanup: true
  on:
    repo: m-lab/etl-schema
    all_branches: true
    condition: $TRAVIS_BRANCH == sandbox-*

######################################################################
#  Staging deployments
#  Auto deployed on merge with master branch
#  There are no mini-deployments here.  ALL elements are redeployed
#  when merges to master occur, and they have no other trigger.
######################################################################

- provider: script
  script:
    $TRAVIS_BUILD_DIR/travis/activate_service_account.sh SERVICE_ACCOUNT_mlab_staging
    && cd $TRAVIS_BUILD_DIR/views
    && ./create_dataset_views.sh SERVICE_ACCOUNT_mlab_staging mlab-staging mlab-staging
  skip_cleanup: true
  on:
    repo: m-lab/etl-schema
    branch: master

######################################################################
#  Prod deployments
#  Deployed on manual tagging with prod-*.
#  Should be used AFTER code review, commit to master, and staging soak.
#  Triggers when *ANY* branch is tagged with prod-*'
######################################################################

- provider: script
  script:
    # Update these version numbers when making changes to the views.
    $TRAVIS_BUILD_DIR/travis/activate_service_account.sh SERVICE_ACCOUNT_mlab_oti
    && cd $TRAVIS_BUILD_DIR/views
    && ./create_dataset_views.sh SERVICE_ACCOUNT_mlab_oti mlab-oti mlab-oti
    && ./create_dataset_views.sh SERVICE_ACCOUNT_mlab_oti mlab-oti measurement-lab
  skip_cleanup: true
  on:
    repo: m-lab/etl-schema
    all_branches: true
    condition: $TRAVIS_TAG =~ ^prod-v[0-9]+\.[0-9]+\.[0-9]+
